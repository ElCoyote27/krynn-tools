#!/bin/bash
#
# $Id: lseth,v 1.17 2015/02/18 03:44:22 root Exp $
#
PHYS_PRINT_PATTERN="%-6s%8s%8s %-11s%-14s%-21s%-20s%s\n"
VIRT_PRINT_PATTERN="%-6s%16s %-24s%-19s%-20s%s\n"

# Sanity Check
if [ "x$(uname -s)" != "xLinux" ]; then
	echo "Not supported on $(uname -s)! Exit!"
	exit 127
fi

# Defines
AWK_CMD=/usr/bin/awk
SED_CMD=/bin/sed
GREP_CMD=/bin/grep
CUT_CMD=/bin/cut
IP_CMD=/sbin/ip
ETHTOOL_CMD=/sbin/ethtool

# Check for sort version
SORT_VER=$(sort --version|${AWK_CMD} '{ if (($1 == "sort" ) && ($2 ~ /GNU/)) { ver=$4 } } END { if (ver != "") print ver ; else print 0 } '|${CUT_CMD} -d. -f1)

if [ $SORT_VER -ge 8 ]; then
	SORT_CMD="/bin/sort -V"
else
	SORT_CMD="/bin/sort"
fi

# Check for binaries
for myexec in "${AWK_CMD}" "${CUT_CMD}" "${SED_CMD}" "${GREP_CMD}" "${SORT_CMD}"
do
	case ${myexec} in
		${AWK_CMD})
			mybinexec="${myexec}"
			;;
		*)
			mybinexec=$(echo "${myexec}"|${AWK_CMD} '{ print $1}')
			;;
	esac
	if [ ! -x ${mybinexec} ]; then
		echo "WARNING: ${myexec} missing!"
		exit 127
	fi
done

# Header state
hstate=0

for mydev in $(ls -d /sys/class/net/eth* /sys/class/net/ib* 2> /dev/null|xargs -n1|${SORT_CMD})
do
	if [ "x${mydev}" != "x" ]; then
		HWPATH="${mydev}/device"
		SPEED="N/A"
		if [ -d ${HWPATH} ]; then
			if [ $hstate -eq 0 ]; then
				printf "\n${PHYS_PRINT_PATTERN}" "#PHYS" "STATE" "SPEED" "DRIVER" "HW_Path" "MAC_Addr" "IP_Addr" "Description"
				hstate+=1
			fi
			DEVI=$(basename ${mydev})
			STATE=$(${IP_CMD} -o a l ${DEVI}|${AWK_CMD} ' { if ($4 == "mtu") { if ($3 ~ /,UP,/ ) print "up"; else print "(down)" }}')
			if [ -f ${mydev}/speed -a "x${STATE}" = "xup" ]; then
				SPEED=$(cat ${mydev}/speed)
			else
				tmp=$(${ETHTOOL_CMD} ${DEVI} 2>/dev/null|${AWK_CMD} '{ if (( $1 == "Speed:" ) && ( $2 ~ /Mb.s/ )) { print $2}}' |${SED_CMD} -e 's@Mb.s@@' )
				if [ "x${tmp}" != "x" ]; then
					SPEED=${tmp}
				fi
			fi
			case ${DEVI} in
				eth*)
					SWDRIVER=$(${ETHTOOL_CMD} -i ${DEVI} 2>/dev/null|${AWK_CMD} '{ if ( $1 == "driver:" ) { print $2}}' )
					PCIPATH=$(${ETHTOOL_CMD} -i ${DEVI} 2>/dev/null|${AWK_CMD} '{ if ( $1 == "bus-info:" ) { print $2}}' )
					if [ -f ${mydev}/address ]; then
						MCADDR=$(cat ${mydev}/address)
					else
						MCADDR=$(${IP_CMD} a l ${DEVI}|${AWK_CMD} '{ if ( $1 ~ /link.ether/ ) print $2 }')
					fi
					# Now look for the real MAC if that devi is enslaved and inactive..
					enslvd=$(${GREP_CMD} -H "Slave Interface: ${DEVI}" /proc/net/bonding/bond* 2> /dev/null)
					if [ $? -eq 0 ]; then
						BMCADDR=$(${GREP_CMD} -A5 "Slave Interface: ${DEVI}" /proc/net/bonding/bond*|${AWK_CMD} '{ if ( $2 ~ /HW/ ) print $4 }')
						if [ "x${BMCADDR}" != "x${MCADDR}" -a "x${BMCADDR}" != "x" ]; then
							MCADDR="(${BMCADDR})"
						fi
					fi
					;;
				ib*)
					SWDRIVER=$(${ETHTOOL_CMD} -i ${DEVI} 2>/dev/null|${AWK_CMD} '{ if ( $1 == "driver:" ) { print $2}}' )
					PCIPATH=$(/bin/ls -l ${HWPATH}|${SED_CMD} -e 's@.*/@@')
					if [ -f ${mydev}/address ]; then
						MCADDR=$(cat ${mydev}/address |${SED_CMD} -e 's/\(.*00:00:00:00:\)\(.*$\)/\2/')
					else
						MCADDR="N/A"
					fi
					;;
				*)
					;;
			esac
			# Catchall Software fallbacks
			if [ "x${SWDRIVER}" = "x" ]; then
				# This most likely means we're not root
				SWDRIVER=$(/bin/ls -l ${mydev}/device/driver/module 2>/dev/null|${SED_CMD} -e 's@.*/@@')
			fi
			if [ "x${PCIPATH}" = "x" ]; then
				# This most likely means we're not root
				PCIPATH=$(/bin/ls -l ${HWPATH}|${SED_CMD} -e 's@.*/@@')
			fi

			case ${SWDRIVER} in
				# For some drivers, there is often much info in the Subsystem field..
				ixgbe|sfc|e1000e|igb)
					MIN_DESCLEN=16
					DEV_VEND=$(/sbin/lspci -vmm -s ${PCIPATH} 2> /dev/null|${GREP_CMD} '^SVendor'|${CUT_CMD} -d: -f2|xargs)
					DEV_DESC=$(/sbin/lspci -vmm -s ${PCIPATH} 2> /dev/null|${GREP_CMD} '^SDevice'|${CUT_CMD} -d: -f2|xargs)
					if [ $(echo ${DEV_DESC}|wc -c) -ge ${MIN_DESCLEN} ]; then
						# Desc is long enough, let's try it
						DESC="${DEV_VEND} ${DEV_DESC}"
					else
						# Desc is too short, fall back
						DESC=$(/sbin/lspci -D -s ${PCIPATH} 2> /dev/null|${SED_CMD} -e 's@.*: @@' )
					fi
					;;
				*)
					DESC=$(/sbin/lspci -D -s ${PCIPATH} 2> /dev/null|${SED_CMD} -e 's@.*: @@' )
					;;
			esac

			IPADDR=$(${IP_CMD} -4 a s ${DEVI}|${AWK_CMD} '{ if (( $1 == "inet" ) && ( $6 == "global" ) && ( $7 != "secondary")) print $2}')
			if [ "x${IPADDR}" = "x" ]; then
				IPADDR="N/A"
			fi

			# Printout
			printf "${PHYS_PRINT_PATTERN}" "${DEVI}" "${STATE}" "${SPEED}" "${SWDRIVER}" "${PCIPATH}" "${MCADDR}" "${IPADDR}" "${DESC}"
		fi
	fi
done

# Header state
hstate=0
KREV=$(uname -r|${CUT_CMD} -d- -f1)
case $KREV in
	2.6.18)
		VGLOB=/sys/class/net/bond
		;;
	2.6.32)
		VGLOB=/sys/devices/virtual/net/
		;;
	*)
		VGLOB=/sys/devices/virtual/net/
		;;
esac

for mydev in $(ls -d ${VGLOB}* 2> /dev/null |xargs -n1|${SORT_CMD})
do
	if [ "x${mydev}" != "x" ]; then
		HWTYPE="${mydev}/type"
		DEVI=$(basename ${mydev})
		if [ -f ${HWTYPE} ]; then
			if [ "x$(cat ${HWTYPE})" = "x1" ]; then
				if [ $hstate -eq 0 ]; then
					printf "\n${VIRT_PRINT_PATTERN}" "#VIRT" "STATE" "DRIVER" "Active MAC" "IP_Addr" "Description"
					hstate+=1
				fi
				STATE=$(cat ${mydev}/operstate)
				STATE=$(${IP_CMD} -o a l ${DEVI}|${AWK_CMD} ' { if ($4 == "mtu") { if ($3 ~ /,UP,/ ) print "up"; else print "(down)" }}')
				if [ -f ${mydev}/bonding/slaves ]; then
					SLAVES=$(cat ${mydev}/bonding/slaves)
					actv=$(${GREP_CMD} "Currently Active Slave:" /proc/net/bonding/${DEVI}|${CUT_CMD} -f2 -d:|xargs)
					ESLAVES=""
					for ifs in ${SLAVES}
					do
						if [ "x${ifs}" = "x${actv}" ]; then
							ESLAVES=$(echo "${ESLAVES} ${ifs}"|xargs)
						else
							ESLAVES=$(echo "${ESLAVES} (${ifs})"|xargs)
						fi
					done
					DESC="[ ${ESLAVES} ]"
				else
					DESC="N/A"
				fi
				IPADDR=$(${IP_CMD} -4 a s ${DEVI}|${AWK_CMD} '{ if (( $1 == "inet" ) && ( $6 == "global" ) && ( $7 != "secondary")) print $2}')
				if [ "x${IPADDR}" = "x" ]; then
					IPADDR="N/A"
				fi
				MCADDR=$(${IP_CMD} a l ${DEVI}|${AWK_CMD} '{ if ( $1 ~ /link.ether/ ) print $2 }')
				tmpdrv=$(echo ${DEVI}|${SED_CMD} -e 's@[0-9]\{1,\}@@')
				case ${tmpdrv} in
					bond)
						tmpdrv=bonding
						;;
				esac
				drvver=$(/sbin/modinfo -F version ${tmpdrv} 2> /dev/null)
				if [ "x${drvver}" = "x" ]; then
					drvver=$(uname -r|${SED_CMD} -e 's@\.el.*@@')
				fi
				SWDRIVER="${tmpdrv} (${drvver})"

				# Printout
				printf "${VIRT_PRINT_PATTERN}" "${DEVI}" "${STATE}" "${SWDRIVER}" "${MCADDR}" "${IPADDR}" "${DESC}"
			fi
		fi
	fi
done

