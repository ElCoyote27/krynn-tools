head	1.11;
access;
symbols;
locks
	root:1.11; strict;
comment	@# @;


1.11
date	2015.08.12.19.50.35;	author root;	state Exp;
branches;
next	1.10;

1.10
date	2014.12.24.07.42.43;	author root;	state Exp;
branches;
next	1.9;

1.9
date	2014.02.24.22.36.45;	author root;	state Exp;
branches;
next	1.8;

1.8
date	2014.01.27.21.23.16;	author root;	state Exp;
branches;
next	1.7;

1.7
date	2014.01.27.20.14.49;	author root;	state Exp;
branches;
next	1.6;

1.6
date	2014.01.07.23.08.35;	author root;	state Exp;
branches;
next	1.5;

1.5
date	2014.01.07.23.07.56;	author root;	state Exp;
branches;
next	1.4;

1.4
date	2013.08.03.13.42.41;	author root;	state Exp;
branches;
next	1.3;

1.3
date	2013.02.05.11.58.46;	author root;	state Exp;
branches;
next	1.2;

1.2
date	2012.11.28.17.38.58;	author root;	state Exp;
branches;
next	1.1;

1.1
date	2012.09.12.14.55.11;	author root;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Minor bugfix for T5610 without IPMI..
@
text
@#!/bin/bash
# $Id: CPU_temp.sh,v 1.10 2014/12/24 07:42:43 root Exp $
#
export LC_ALL=C

#
CPUTMP_FILE=`/bin/mktemp -p /tmp --suffix=CPU_temp`

if [ ! -f ${CPUTMP_FILE} ]; then
	echo "Ooops!"; exit 127
fi

if [ -x /usr/bin/sensors ]; then
	/usr/bin/sensors > ${CPUTMP_FILE}
	TEMPS=`grep Core ${CPUTMP_FILE}|(while read a core temp scale max; do echo $temp; done)|sort -ur`
else
	echo "/usr/bin/sensors not found!"
fi

# IPMITOOL
if [ -x /usr/bin/ipmitool ] ; then
	/usr/bin/ipmitool sdr info > /dev/null 2>&1
	if [ $? -eq 0 ]; then
	#	AMB_TEMP=`/usr/bin/ipmitool sdr list|awk -F '|' '{ if (( $1 ~ /Ambient/ ) && ( $3 ~ /ok/ )) print $2}'`
	#	AMB_TEMP=`/usr/sbin/ipmi-sensors -t Temperature --ignore-not-available-sensors|awk -F '|' '{ if ( $2 ~ /Ambient/ ) print $4,$5}'|xargs`
		AMB_TEMP=`/usr/sbin/ipmi-sensors -s 10 --ignore-not-available-sensors|awk -F '|' '{ if ( $2 ~ /Ambient/ ) print $4,$5}'|xargs`
		if [ "x${AMB_TEMP}" != "x" ]; then
			echo "Ambient Temp: ${AMB_TEMP}"
		fi
	fi
fi

# Iterate
for mytemp in $TEMPS
do
	CPU_CORES=`grep "Core.*${mytemp} C" ${CPUTMP_FILE}|awk '{ print $2}'|sed -e 's/://'|xargs|sed -e 's/ /,/g'`
	MAX_TEMP=`grep "Core.*${mytemp} C" ${CPUTMP_FILE}|awk '{ print $5,$6,$7,$8,$9,$10,$11,$12}'|sort -u`
	echo "Temp: $mytemp C $MAX_TEMP, CPU Cores: ${CPU_CORES}"
done
rm -f ${CPUTMP_FILE}
@


1.10
log
@*** empty log message ***
@
text
@d2 1
a2 1
# $Id: CPU_temp.sh,v 1.9 2014/02/24 22:36:45 root Exp $
d22 8
a29 7
	if [ -c /dev/ipmi0 ]; then
#	AMB_TEMP=`/usr/bin/ipmitool sdr list|awk -F '|' '{ if (( $1 ~ /Ambient/ ) && ( $3 ~ /ok/ )) print $2}'`
#	AMB_TEMP=`/usr/sbin/ipmi-sensors -t Temperature --ignore-not-available-sensors|awk -F '|' '{ if ( $2 ~ /Ambient/ ) print $4,$5}'|xargs`
	AMB_TEMP=`/usr/sbin/ipmi-sensors -s 10 --ignore-not-available-sensors|awk -F '|' '{ if ( $2 ~ /Ambient/ ) print $4,$5}'|xargs`
	if [ "x${AMB_TEMP}" != "x" ]; then
		echo "Ambient Temp: ${AMB_TEMP}"
	fi
@


1.9
log
@*** empty log message ***
@
text
@d2 5
a6 1
# $Id: CPU_temp.sh,v 1.8 2014/01/27 21:23:16 root Exp root $
@


1.8
log
@*** empty log message ***
@
text
@d2 1
a2 1
# $Id: CPU_temp.sh,v 1.7 2014/01/27 20:14:49 root Exp root $
d18 1
d21 1
a21 1
	AMB_TEMP=`/usr/sbin/ipmi-sensors -s 10|awk -F '|' '{ if ( $2 ~ /Ambient/ ) print $4,$5}'|xargs`
d25 1
@


1.7
log
@*** empty log message ***
@
text
@d2 1
a2 1
# $Id: CPU_temp.sh,v 1.6 2014/01/07 23:08:35 root Exp root $
d19 2
a20 1
	AMB_TEMP=`/usr/sbin/ipmi-sensors -t Temperature --ignore-not-available-sensors|awk -F '|' '{ if ( $2 ~ /Ambient/ ) print $4,$5}'|xargs`
@


1.6
log
@Cleanup
@
text
@d2 1
a2 1
# $Id: CPU_temp.sh,v 1.5 2014/01/07 23:07:56 root Exp root $
d18 2
a19 1
	AMB_TEMP=`/usr/bin/ipmitool sdr list|awk -F '|' '{ if (( $1 ~ /Ambient/ ) && ( $3 ~ /ok/ )) print $2}'`
d21 1
a21 1
		echo "Ambient Temp:${AMB_TEMP}"
@


1.5
log
@*** empty log message ***
@
text
@d2 1
a2 1
# $Id: CPU_temp.sh,v 1.4 2013/08/03 13:42:41 root Exp $
d20 1
a20 1
		echo "Ambient Temp: ${AMB_TEMP}"
@


1.4
log
@*** empty log message ***
@
text
@d2 1
a2 1
# $Id: CPU_temp.sh,v 1.3 2013/02/05 11:58:46 root Exp root $
d15 10
@


1.3
log
@*** empty log message ***
@
text
@d2 7
a8 1
# $Id: CPU_temp.sh,v 1.2 2012/11/28 17:38:58 root Exp $
d10 2
a11 1
	TEMPS=`/usr/bin/sensors|grep Core|(while read a core temp scale max; do echo $temp; done)|sort -ur`
d17 2
a18 2
	CPU_CORES=`/usr/bin/sensors|grep "Core.*${mytemp} C"|awk '{ print $2}'|sed -e 's/://'|xargs|sed -e 's/ /,/g'`
	MAX_TEMP=`/usr/bin/sensors|grep "Core.*${mytemp} C"|awk '{ print $5,$6,$7,$8,$9,$10,$11,$12}'|sort -u`
d21 1
@


1.2
log
@*** empty log message ***
@
text
@d2 1
a2 1
# $Id: CPU_temp.sh,v 1.1 2012/09/12 14:55:11 root Exp $
d11 1
a11 1
	MAX_TEMP=`/usr/bin/sensors|grep "Core.*${mytemp} C"|awk '{ print $5,$6,$7,$8}'|sort -u`
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
# $Id$
d4 1
a4 1
	TEMPS=`/usr/bin/sensors|grep Core|(while read a core temp scale max; do echo $temp; done)|sort -u`
@
