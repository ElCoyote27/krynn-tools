#!/bin/bash
# $Id: ptree,v 1.6 2015/01/09 17:35:54 root Exp $

# ptree only supports one and exactly one PID so forget other args..
MPSARGS="-planA"
#MPSARGS="-planG"

# Initialization
myPID=$1
myPPID=${myPID}
myTOP=${myPID}

#Sub-routines
errecho() {
	>&2 echo "$*"
}

CheckPID() {
	# ptree only supports one and exactly one PID so forget about other args..
	if [ "x$1" = "x" ]; then
		echo "no PID specified!"
		return 0
	fi

	# Verify PID's presence
	ps --no-heading -o pid ${myPID} > /dev/null 2>&1 || {
		echo "PID $myPID does not exist!"
		return 1
	}
	return 0
}

GetPPID() {
	CheckPID $1 || exit 127
	localPPID=$(awk '{ if ( $1 ~ "PPid:" ) print $2 }' /proc/$1/status)
	if [ -f /proc/${localPPID}/status ]; then
		localPName=$(awk '{ if ( $1 ~ "Name:" ) print $2 }' /proc/${localPPID}/status)
		# localPPID=`ps --no-heading -o ppid ${myPPID} 2> /dev/null|xargs`
		[ "x${localPPID}" != "x" ] && {
			[ "x${localPName}" != "x" -a "x${localPName}" != "xinit" -a "x${localPName}" != "xscreen" ] && {
				echo ${localPPID}
			} || {
				errecho "Discarded PPID: ${localPPID}"
				echo 0
			}
		} || {
			echo 0
		}
		else
			echo 0
			return 1
		fi
	return 0
}
#

CheckPID ${myPID} || exit 127

if [ "x${myTOP}" != "x" ]; then
	# Walk up to Find Parent until myPPID=1
	while [ ${myTOP} -gt 0 ]; do
		myTOP=$(GetPPID ${myPPID})
		if [ ${myTOP} -gt 1 ]; then
			myPPID=${myTOP}
			## echo "Found PPID: ${myPPID}"
		fi
	done
	exec /usr/bin/pstree ${MPSARGS} ${myPPID}
else
	exec /usr/bin/pstree ${MPSARGS}
fi
